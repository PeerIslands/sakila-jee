package org.sanmarcux.samples.sboot.sakila.business.impl;

import org.modelmapper.ModelMapper;
import org.sanmarcux.samples.sboot.sakila.business.ActorBusiness;
import org.sanmarcux.samples.sboot.sakila.dao.ActorRepository;
import org.sanmarcux.samples.sboot.sakila.dao.model.Actor;
import org.sanmarcux.samples.sboot.sakila.entities.DTOIntActor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;
import java.util.stream.StreamSupport;

/**
 * Created on 21/04/2018.
 *
 * @author Cesardl
 */
@Service
public class ActorBusinessImpl implements ActorBusiness {

    private ActorRepository actorRepository;

    private ModelMapper modelMapper;

    @Autowired
    private ActorBusinessImpl(ActorRepository actorRepository, ModelMapper modelMapper) {
        this.actorRepository = actorRepository;
        this.modelMapper = modelMapper;
    }

    @Override
    public List<DTOIntActor> all() {
        Iterable<Actor> iterable = actorRepository.findAll();

        return StreamSupport.stream(iterable.spliterator(), false)
                .map(actor -> modelMapper.map(actor, DTOIntActor.class))
                .collect(Collectors.toList());
    }

    @Override
    public DTOIntActor save(final DTOIntActor actor) {
        // actor.setLastUpdate(new Date()); DOESN'T NECESSARY, generated by db.
        return null;
    }

    @Override
    public Optional<DTOIntActor> findById(final Short actorId) {
        return null;
    }

    @Override
    public void deleteById(final Short actorId) {

    }
}
